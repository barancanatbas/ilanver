// Code generated by mockery v2.12.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	gorm "gorm.io/gorm"

	testing "testing"
)

// IRepository is an autogenerated mock type for the IRepository type
type IRepository struct {
	mock.Mock
}

// Commit provides a mock function with given fields:
func (_m *IRepository) Commit() {
	_m.Called()
}

// CreateTX provides a mock function with given fields:
func (_m *IRepository) CreateTX() *gorm.DB {
	ret := _m.Called()

	var r0 *gorm.DB
	if rf, ok := ret.Get(0).(func() *gorm.DB); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*gorm.DB)
		}
	}

	return r0
}

// RollBack provides a mock function with given fields:
func (_m *IRepository) RollBack() {
	_m.Called()
}

// SetTX provides a mock function with given fields: tx
func (_m *IRepository) SetTX(tx *gorm.DB) {
	_m.Called(tx)
}

// NewIRepository creates a new instance of IRepository. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewIRepository(t testing.TB) *IRepository {
	mock := &IRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
